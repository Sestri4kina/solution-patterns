/**
Problem Statement

Given a word, write a function to generate all of its unique generalized abbreviations.

Generalized abbreviation of a word can be generated by replacing 
each substring of the word by the count of characters in the substring. 
Take the example of “ab” which has four substrings: “”, “a”, “b”, and “ab”. 
After replacing these substrings in the actual word by the count of characters 
we get all the generalized abbreviations: “ab”, “1b”, “a1”, and “2”.

Example 1:
Input: "BAT"
Output: "BAT", "BA1", "B1T", "B2", "1AT", "1A1", "2T", "3"
*/

// @ts-check
const Queue = require('./queue.js');

/**
 * 
 * @param {string} word
 * @returns {Array<string>} 
 */
const generateGeneralizedAbbreviation = function(word) {
    const isDigit = /[1-9]/;

    let queue = new Queue();
    queue.enqueue('');

    for (let i = 0; i < word.length; i++) {
        const curSize = queue.size();

        for (let j = 0; j < curSize; j++) {
            const curAbbr = queue.dequeue();
            const lastChar = curAbbr.slice(-1);

            // abbrevate
            if (isDigit.test(lastChar)) {
                queue.enqueue(curAbbr.slice(0, curAbbr.length - 1) + String(Number(lastChar) + 1));
            } else {
                queue.enqueue(curAbbr + '1');
            }
            
            // skip
            queue.enqueue(curAbbr + word[i]);
        }
        
    }

    return queue.items;
};

console.log(generateGeneralizedAbbreviation("BAT"));
console.log(generateGeneralizedAbbreviation("code"));
